/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _INTERFACE1_H_RPCGEN
#define _INTERFACE1_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif

#define MAXCADENA 30
#define MINCADENA 5

struct nodo_Indicadores {
	char tipo_id[MINCADENA];
	int id;
	float frecuenciaCardiaca;
	float frecuenciaRespiratoria;
	float temperatura;
};
typedef struct nodo_Indicadores nodo_Indicadores;

struct nodo_Asintomatico {
	char nombre[MAXCADENA];
	char apellido[MAXCADENA];
	char tipo_id[MINCADENA];
	int id;
	char direccion[MAXCADENA];
};
typedef struct nodo_Asintomatico nodo_Asintomatico;

#define gestion_alertas 0x20000001
#define gestion_alertas_version 1

#if defined(__STDC__) || defined(__cplusplus)
#define registrarAsintomatico 1
extern  bool_t * registrarasintomatico_1(nodo_Asintomatico *, CLIENT *);
extern  bool_t * registrarasintomatico_1_svc(nodo_Asintomatico *, struct svc_req *);
#define enviarIndicadores 2
extern  bool_t * enviarindicadores_1(nodo_Indicadores *, CLIENT *);
extern  bool_t * enviarindicadores_1_svc(nodo_Indicadores *, struct svc_req *);
extern int gestion_alertas_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define registrarAsintomatico 1
extern  bool_t * registrarasintomatico_1();
extern  bool_t * registrarasintomatico_1_svc();
#define enviarIndicadores 2
extern  bool_t * enviarindicadores_1();
extern  bool_t * enviarindicadores_1_svc();
extern int gestion_alertas_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_nodo_Indicadores (XDR *, nodo_Indicadores*);
extern  bool_t xdr_nodo_Asintomatico (XDR *, nodo_Asintomatico*);

#else /* K&R C */
extern bool_t xdr_nodo_Indicadores ();
extern bool_t xdr_nodo_Asintomatico ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_INTERFACE1_H_RPCGEN */
